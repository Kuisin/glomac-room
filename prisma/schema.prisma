// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Resv {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime @default(now())
  status      String   @default("pending")
  title       String
  type        String
  roomId      Int
  startTime   DateTime
  endTime     DateTime
  description String?
  userId      Int?

  room Room  @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([roomId])
  @@index([userId])
  @@index([startTime])
}

model Facility {
  id          Int      @id @default(autoincrement())
  area        String?
  name        String
  floors      String[]
  description String?

  rooms Room[]
}

model Room {
  id          Int    @id @default(autoincrement())
  facilityId  Int?
  floor       String?
  name        String
  capacity    Int?
  location    String?
  description String?

  facility     Facility? @relation(fields: [facilityId], references: [id])
  reservations Resv[]

  @@index([facilityId])
}

model User {
  id          Int     @id @default(autoincrement())
  role        String
  studentId   String
  email       String
  lastName    String
  firstName   String
  displayName String
  valid       Boolean

  reservations Resv[]
}
